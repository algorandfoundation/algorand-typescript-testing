{
    "name": "StateAppParamsContract",
    "structs": {},
    "methods": [
        {
            "name": "verify_app_params_get_approval_program",
            "args": [
                {
                    "type": "application",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_app_params_get_clear_state_program",
            "args": [
                {
                    "type": "application",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_app_params_get_global_num_uint",
            "args": [
                {
                    "type": "application",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_app_params_get_global_num_byte_slice",
            "args": [
                {
                    "type": "application",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_app_params_get_local_num_uint",
            "args": [
                {
                    "type": "application",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_app_params_get_local_num_byte_slice",
            "args": [
                {
                    "type": "application",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_app_params_get_extra_program_pages",
            "args": [
                {
                    "type": "application",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_app_params_get_creator",
            "args": [
                {
                    "type": "application",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_app_params_get_address",
            "args": [
                {
                    "type": "application",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        92,
                        114,
                        136,
                        159,
                        182,
                        205,
                        228,
                        251,
                        281
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        316
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        95,
                        117,
                        139,
                        162,
                        185,
                        208,
                        231,
                        254,
                        284
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        339,
                        361,
                        383,
                        405,
                        427,
                        449,
                        471,
                        493,
                        515
                    ],
                    "errorMessage": "expected exists by index to match"
                },
                {
                    "pc": [
                        337,
                        359,
                        381,
                        403,
                        425,
                        447,
                        469,
                        491,
                        513
                    ],
                    "errorMessage": "expected value by index to match"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyABASYBBBUffHUxG0EBJIIJBF57fVIE4p4w7gRYgZCZBMp3tZsEU8DdmwRfAAcDBNd70h8EqUGnRgS9Pp7sNhoAjgkAwACiAIsAdABdAEYALwAZAAOBAEMxGRREMRhENhoBF8AyiAGGKExQsCJDMRkURDEYRDYaARfAMogBWihMULAiQzEZFEQxGEQ2GgEXwDKIAS4WKExQsCJDMRkURDEYRDYaARfAMogBARYoTFCwIkMxGRREMRhENhoBF8AyiADUFihMULAiQzEZFEQxGEQ2GgEXwDKIAKcWKExQsCJDMRkURDEYRDYaARfAMogAehYoTFCwIkMxGRREMRhENhoBF8AyiABNSRUWVwYCTFAoTFCwIkMxGRREMRhENhoBF8AyiAAZSRUWVwYCTFAoTFCwIkMxGUD/HTEYFEQiQ4oBAYv/cgAiwBoXcgBLA08CEkQSRImKAQGL/3IBIsAaF3IBSwNPAhJEEkSJigEBi/9yAiLAGhdyAksDTwISRBJEiYoBAYv/cgMiwBoXcgNLA08CEkQSRImKAQGL/3IEIsAaF3IESwNPAhJEEkSJigEBi/9yBSLAGhdyBUsDTwISRBJEiYoBAYv/cgYiwBoXcgZLA08CEkQSRImKAQGL/3IHIsAaF3IHSwNPAhJEEkSJigEBi/9yCCLAGhdyCEsDTwISRBJEiQ==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}