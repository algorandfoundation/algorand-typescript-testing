#pragma version 10

tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.approvalProgram:
    intcblock 1 0
    bytecblock 0x151f7c75
    callsub __puya_arc4_router__
    return


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@16
    pushbytess 0x5f5b43e4 0x73dc93c7 0x5626dfeb 0xdc8a25bf 0x198ebd8c 0x2301ab26 0x9f68fca6 0xa975c2d1 0xd1e04801 0xb6966be5 0x195d5418 0x6adae3f1 // method "verify_acct_balance(account)uint64", method "verify_acct_min_balance(account)uint64", method "verify_acct_auth_addr(account)address", method "verify_acct_total_num_uint(account)uint64", method "verify_acct_total_num_byte_slice(account)uint64", method "verify_acct_total_extra_app_pages(account)uint64", method "verify_acct_total_apps_created(account)uint64", method "verify_acct_total_apps_opted_in(account)uint64", method "verify_acct_total_assets_created(account)uint64", method "verify_acct_total_assets(account)uint64", method "verify_acct_total_boxes(account)uint64", method "verify_acct_total_box_bytes(account)uint64"
    txna ApplicationArgs 0
    match __puya_arc4_router___verify_acct_balance_route@2 __puya_arc4_router___verify_acct_min_balance_route@3 __puya_arc4_router___verify_acct_auth_addr_route@4 __puya_arc4_router___verify_acct_total_num_uint_route@5 __puya_arc4_router___verify_acct_total_num_byte_slice_route@6 __puya_arc4_router___verify_acct_total_extra_app_pages_route@7 __puya_arc4_router___verify_acct_total_apps_created_route@8 __puya_arc4_router___verify_acct_total_apps_opted_in_route@9 __puya_arc4_router___verify_acct_total_assets_created_route@10 __puya_arc4_router___verify_acct_total_assets_route@11 __puya_arc4_router___verify_acct_total_boxes_route@12 __puya_arc4_router___verify_acct_total_box_bytes_route@13
    intc_1 // 0
    retsub

__puya_arc4_router___verify_acct_balance_route@2:
    // tests/artifacts/state-ops/contract.algo.ts:27
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:27
    // @arc4.abimethod()
    callsub verify_acct_balance
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_min_balance_route@3:
    // tests/artifacts/state-ops/contract.algo.ts:39
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:39
    // @arc4.abimethod()
    callsub verify_acct_min_balance
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_auth_addr_route@4:
    // tests/artifacts/state-ops/contract.algo.ts:51
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:51
    // @arc4.abimethod()
    callsub verify_acct_auth_addr
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_total_num_uint_route@5:
    // tests/artifacts/state-ops/contract.algo.ts:60
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:60
    // @arc4.abimethod()
    callsub verify_acct_total_num_uint
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_total_num_byte_slice_route@6:
    // tests/artifacts/state-ops/contract.algo.ts:69
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:69
    // @arc4.abimethod()
    callsub verify_acct_total_num_byte_slice
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_total_extra_app_pages_route@7:
    // tests/artifacts/state-ops/contract.algo.ts:78
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:78
    // @arc4.abimethod()
    callsub verify_acct_total_extra_app_pages
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_total_apps_created_route@8:
    // tests/artifacts/state-ops/contract.algo.ts:87
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:87
    // @arc4.abimethod()
    callsub verify_acct_total_apps_created
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_total_apps_opted_in_route@9:
    // tests/artifacts/state-ops/contract.algo.ts:96
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:96
    // @arc4.abimethod()
    callsub verify_acct_total_apps_opted_in
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_total_assets_created_route@10:
    // tests/artifacts/state-ops/contract.algo.ts:105
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:105
    // @arc4.abimethod()
    callsub verify_acct_total_assets_created
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_total_assets_route@11:
    // tests/artifacts/state-ops/contract.algo.ts:114
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:114
    // @arc4.abimethod()
    callsub verify_acct_total_assets
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_total_boxes_route@12:
    // tests/artifacts/state-ops/contract.algo.ts:123
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:123
    // @arc4.abimethod()
    callsub verify_acct_total_boxes
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_acct_total_box_bytes_route@13:
    // tests/artifacts/state-ops/contract.algo.ts:132
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/state-ops/contract.algo.ts:132
    // @arc4.abimethod()
    callsub verify_acct_total_box_bytes
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___bare_routing@16:
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@20
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    retsub

__puya_arc4_router___after_if_else@20:
    // tests/artifacts/state-ops/contract.algo.ts:26
    // export class StateAcctParamsGetContract extends arc4.Contract {
    intc_1 // 0
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_balance(a: bytes) -> uint64:
verify_acct_balance:
    // tests/artifacts/state-ops/contract.algo.ts:27-28
    // @arc4.abimethod()
    // public verify_acct_balance(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:29
    // const [value, funded] = op.AcctParams.acctBalance(a)
    frame_dig -1
    acct_params_get AcctBalance
    // tests/artifacts/state-ops/contract.algo.ts:30
    // const [value_index, funded_index] = op.AcctParams.acctBalance(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctBalance
    // tests/artifacts/state-ops/contract.algo.ts:31
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:32
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:33
    // assert(value === a.balance, 'expected Account balance to match')
    frame_dig -1
    acct_params_get AcctBalance
    assert // account funded
    dig 1
    ==
    assert // expected Account balance to match
    // tests/artifacts/state-ops/contract.algo.ts:34
    // assert(value === op.balance(a), 'expected op.balance to match')
    frame_dig -1
    balance
    dig 1
    ==
    assert // expected op.balance to match
    // tests/artifacts/state-ops/contract.algo.ts:35
    // assert(value === op.balance(get_1st_ref_index()), 'expected op.balance by index to match')
    callsub get_1st_ref_index
    balance
    dig 1
    ==
    assert // expected op.balance by index to match
    // tests/artifacts/state-ops/contract.algo.ts:36
    // return value
    retsub


// tests/artifacts/state-ops/contract.algo.ts::get_1st_ref_index() -> uint64:
get_1st_ref_index:
    // tests/artifacts/state-ops/contract.algo.ts:22
    // function get_1st_ref_index(): uint64 {
    proto 0 1
    // tests/artifacts/state-ops/contract.algo.ts:23
    // return op.btoi(Txn.applicationArgs(1))
    intc_0 // 1
    txnas ApplicationArgs
    btoi
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_min_balance(a: bytes) -> uint64:
verify_acct_min_balance:
    // tests/artifacts/state-ops/contract.algo.ts:39-40
    // @arc4.abimethod()
    // public verify_acct_min_balance(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:41
    // const [value, funded] = op.AcctParams.acctMinBalance(a)
    frame_dig -1
    acct_params_get AcctMinBalance
    // tests/artifacts/state-ops/contract.algo.ts:42
    // const [value_index, funded_index] = op.AcctParams.acctMinBalance(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctMinBalance
    // tests/artifacts/state-ops/contract.algo.ts:43
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:44
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:45
    // assert(value === a.minBalance, 'expected Account min_balance to match')
    frame_dig -1
    acct_params_get AcctMinBalance
    assert // account funded
    dig 1
    ==
    assert // expected Account min_balance to match
    // tests/artifacts/state-ops/contract.algo.ts:46
    // assert(value === op.minBalance(a), 'expected op.min_balance to match')
    frame_dig -1
    min_balance
    dig 1
    ==
    assert // expected op.min_balance to match
    // tests/artifacts/state-ops/contract.algo.ts:47
    // assert(value === op.minBalance(get_1st_ref_index()), 'expected op.min_balance by index to match')
    callsub get_1st_ref_index
    min_balance
    dig 1
    ==
    assert // expected op.min_balance by index to match
    // tests/artifacts/state-ops/contract.algo.ts:48
    // return value
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_auth_addr(a: bytes) -> bytes:
verify_acct_auth_addr:
    // tests/artifacts/state-ops/contract.algo.ts:51-52
    // @arc4.abimethod()
    // public verify_acct_auth_addr(a: Account): Address {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:53
    // const [value, funded] = op.AcctParams.acctAuthAddr(a)
    frame_dig -1
    acct_params_get AcctAuthAddr
    // tests/artifacts/state-ops/contract.algo.ts:54
    // const [value_index, funded_index] = op.AcctParams.acctAuthAddr(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctAuthAddr
    // tests/artifacts/state-ops/contract.algo.ts:55
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:56
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:57
    // return new Address(value)
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_total_num_uint(a: bytes) -> uint64:
verify_acct_total_num_uint:
    // tests/artifacts/state-ops/contract.algo.ts:60-61
    // @arc4.abimethod()
    // public verify_acct_total_num_uint(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:62
    // const [value, funded] = op.AcctParams.acctTotalNumUint(a)
    frame_dig -1
    acct_params_get AcctTotalNumUint
    // tests/artifacts/state-ops/contract.algo.ts:63
    // const [value_index, funded_index] = op.AcctParams.acctTotalNumUint(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctTotalNumUint
    // tests/artifacts/state-ops/contract.algo.ts:64
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:65
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:66
    // return value
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_total_num_byte_slice(a: bytes) -> uint64:
verify_acct_total_num_byte_slice:
    // tests/artifacts/state-ops/contract.algo.ts:69-70
    // @arc4.abimethod()
    // public verify_acct_total_num_byte_slice(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:71
    // const [value, funded] = op.AcctParams.acctTotalNumByteSlice(a)
    frame_dig -1
    acct_params_get AcctTotalNumByteSlice
    // tests/artifacts/state-ops/contract.algo.ts:72
    // const [value_index, funded_index] = op.AcctParams.acctTotalNumByteSlice(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctTotalNumByteSlice
    // tests/artifacts/state-ops/contract.algo.ts:73
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:74
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:75
    // return value
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_total_extra_app_pages(a: bytes) -> uint64:
verify_acct_total_extra_app_pages:
    // tests/artifacts/state-ops/contract.algo.ts:78-79
    // @arc4.abimethod()
    // public verify_acct_total_extra_app_pages(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:80
    // const [value, funded] = op.AcctParams.acctTotalExtraAppPages(a)
    frame_dig -1
    acct_params_get AcctTotalExtraAppPages
    // tests/artifacts/state-ops/contract.algo.ts:81
    // const [value_index, funded_index] = op.AcctParams.acctTotalExtraAppPages(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctTotalExtraAppPages
    // tests/artifacts/state-ops/contract.algo.ts:82
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:83
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:84
    // return value
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_total_apps_created(a: bytes) -> uint64:
verify_acct_total_apps_created:
    // tests/artifacts/state-ops/contract.algo.ts:87-88
    // @arc4.abimethod()
    // public verify_acct_total_apps_created(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:89
    // const [value, funded] = op.AcctParams.acctTotalAppsCreated(a)
    frame_dig -1
    acct_params_get AcctTotalAppsCreated
    // tests/artifacts/state-ops/contract.algo.ts:90
    // const [value_index, funded_index] = op.AcctParams.acctTotalAppsCreated(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctTotalAppsCreated
    // tests/artifacts/state-ops/contract.algo.ts:91
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:92
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:93
    // return value
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_total_apps_opted_in(a: bytes) -> uint64:
verify_acct_total_apps_opted_in:
    // tests/artifacts/state-ops/contract.algo.ts:96-97
    // @arc4.abimethod()
    // public verify_acct_total_apps_opted_in(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:98
    // const [value, funded] = op.AcctParams.acctTotalAppsOptedIn(a)
    frame_dig -1
    acct_params_get AcctTotalAppsOptedIn
    // tests/artifacts/state-ops/contract.algo.ts:99
    // const [value_index, funded_index] = op.AcctParams.acctTotalAppsOptedIn(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctTotalAppsOptedIn
    // tests/artifacts/state-ops/contract.algo.ts:100
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:101
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:102
    // return value
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_total_assets_created(a: bytes) -> uint64:
verify_acct_total_assets_created:
    // tests/artifacts/state-ops/contract.algo.ts:105-106
    // @arc4.abimethod()
    // public verify_acct_total_assets_created(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:107
    // const [value, funded] = op.AcctParams.acctTotalAssetsCreated(a)
    frame_dig -1
    acct_params_get AcctTotalAssetsCreated
    // tests/artifacts/state-ops/contract.algo.ts:108
    // const [value_index, funded_index] = op.AcctParams.acctTotalAssetsCreated(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctTotalAssetsCreated
    // tests/artifacts/state-ops/contract.algo.ts:109
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:110
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:111
    // return value
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_total_assets(a: bytes) -> uint64:
verify_acct_total_assets:
    // tests/artifacts/state-ops/contract.algo.ts:114-115
    // @arc4.abimethod()
    // public verify_acct_total_assets(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:116
    // const [value, funded] = op.AcctParams.acctTotalAssets(a)
    frame_dig -1
    acct_params_get AcctTotalAssets
    // tests/artifacts/state-ops/contract.algo.ts:117
    // const [value_index, funded_index] = op.AcctParams.acctTotalAssets(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctTotalAssets
    // tests/artifacts/state-ops/contract.algo.ts:118
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:119
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:120
    // return value
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_total_boxes(a: bytes) -> uint64:
verify_acct_total_boxes:
    // tests/artifacts/state-ops/contract.algo.ts:123-124
    // @arc4.abimethod()
    // public verify_acct_total_boxes(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:125
    // const [value, funded] = op.AcctParams.acctTotalBoxes(a)
    frame_dig -1
    acct_params_get AcctTotalBoxes
    // tests/artifacts/state-ops/contract.algo.ts:126
    // const [value_index, funded_index] = op.AcctParams.acctTotalBoxes(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctTotalBoxes
    // tests/artifacts/state-ops/contract.algo.ts:127
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:128
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:129
    // return value
    retsub


// tests/artifacts/state-ops/contract.algo.ts::StateAcctParamsGetContract.verify_acct_total_box_bytes(a: bytes) -> uint64:
verify_acct_total_box_bytes:
    // tests/artifacts/state-ops/contract.algo.ts:132-133
    // @arc4.abimethod()
    // public verify_acct_total_box_bytes(a: Account): uint64 {
    proto 1 1
    // tests/artifacts/state-ops/contract.algo.ts:134
    // const [value, funded] = op.AcctParams.acctTotalBoxBytes(a)
    frame_dig -1
    acct_params_get AcctTotalBoxBytes
    // tests/artifacts/state-ops/contract.algo.ts:135
    // const [value_index, funded_index] = op.AcctParams.acctTotalBoxBytes(get_1st_ref_index())
    callsub get_1st_ref_index
    acct_params_get AcctTotalBoxBytes
    // tests/artifacts/state-ops/contract.algo.ts:136
    // assert(value === value_index, 'expected value by index to match')
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/state-ops/contract.algo.ts:137
    // assert(funded === funded_index, 'expected funded by index to match')
    ==
    assert // expected funded by index to match
    // tests/artifacts/state-ops/contract.algo.ts:138
    // return value
    retsub
