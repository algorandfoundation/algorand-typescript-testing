{
    "hints": {
        "get_implicit_key_arc4_uintn64()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_str()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_byte()byte": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_bool()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_address()address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_uintn128()uint128": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_dynamic_bytes()byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_uintn64()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_str()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_byte()byte": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_bool()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_address()address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_uintn128()uint128": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_dynamic_bytes()byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_uintn64(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_str(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_byte(byte)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_bool(bool)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_address(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_uintn128(uint128)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_dynamic_bytes(byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_uintn64(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_str(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_byte(byte)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_bool(bool)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_address(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_uintn128(uint128)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_dynamic_bytes(byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 14,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "arc4Address": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_address"
                },
                "arc4Bool": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_bool"
                },
                "arc4Byte": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_byte"
                },
                "arc4DynamicBytes": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_dynamic_bytes"
                },
                "arc4Str": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_str"
                },
                "arc4UintN128": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_uintn128"
                },
                "arc4UintN64": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_uintn64"
                },
                "implicitKeyArc4Address": {
                    "type": "bytes",
                    "key": "implicitKeyArc4Address"
                },
                "implicitKeyArc4Bool": {
                    "type": "bytes",
                    "key": "implicitKeyArc4Bool"
                },
                "implicitKeyArc4Byte": {
                    "type": "bytes",
                    "key": "implicitKeyArc4Byte"
                },
                "implicitKeyArc4DynamicBytes": {
                    "type": "bytes",
                    "key": "implicitKeyArc4DynamicBytes"
                },
                "implicitKeyArc4Str": {
                    "type": "bytes",
                    "key": "implicitKeyArc4Str"
                },
                "implicitKeyArc4UintN128": {
                    "type": "bytes",
                    "key": "implicitKeyArc4UintN128"
                },
                "implicitKeyArc4UintN64": {
                    "type": "bytes",
                    "key": "implicitKeyArc4UintN64"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "GlobalStateContract",
        "methods": [
            {
                "name": "get_implicit_key_arc4_uintn64",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "get_implicit_key_arc4_str",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "get_implicit_key_arc4_byte",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "byte"
                }
            },
            {
                "name": "get_implicit_key_arc4_bool",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "get_implicit_key_arc4_address",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "get_implicit_key_arc4_uintn128",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint128"
                }
            },
            {
                "name": "get_implicit_key_arc4_dynamic_bytes",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "get_arc4_uintn64",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "get_arc4_str",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "get_arc4_byte",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "byte"
                }
            },
            {
                "name": "get_arc4_bool",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "get_arc4_address",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "get_arc4_uintn128",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint128"
                }
            },
            {
                "name": "get_arc4_dynamic_bytes",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "set_implicit_key_arc4_uintn64",
                "args": [
                    {
                        "type": "uint64",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_str",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_byte",
                "args": [
                    {
                        "type": "byte",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_bool",
                "args": [
                    {
                        "type": "bool",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_address",
                "args": [
                    {
                        "type": "address",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_uintn128",
                "args": [
                    {
                        "type": "uint128",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_dynamic_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_uintn64",
                "args": [
                    {
                        "type": "uint64",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_str",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_byte",
                "args": [
                    {
                        "type": "byte",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_bool",
                "args": [
                    {
                        "type": "bool",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_address",
                "args": [
                    {
                        "type": "address",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_uintn128",
                "args": [
                    {
                        "type": "uint128",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_dynamic_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}