{
    "hints": {
        "verify_app_params_get_approval_program(application)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_app_params_get_clear_state_program(application)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_app_params_get_global_num_uint(application)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_app_params_get_global_num_byte_slice(application)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_app_params_get_local_num_uint(application)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_app_params_get_local_num_byte_slice(application)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_app_params_get_extra_program_pages(application)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_app_params_get_creator(application)address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_app_params_get_address(application)address": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy9hcnRpZmFjdHMvc3RhdGUtb3BzL2NvbnRyYWN0LmFsZ28udHM6OlN0YXRlQXBwUGFyYW1zQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW06CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "StateAppParamsContract",
        "methods": [
            {
                "name": "verify_app_params_get_approval_program",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_app_params_get_clear_state_program",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_app_params_get_global_num_uint",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_app_params_get_global_num_byte_slice",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_app_params_get_local_num_uint",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_app_params_get_local_num_byte_slice",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_app_params_get_extra_program_pages",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_app_params_get_creator",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "verify_app_params_get_address",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}