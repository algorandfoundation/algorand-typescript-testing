{
    "name": "StateAcctParamsGetContract",
    "structs": {},
    "methods": [
        {
            "name": "verify_acct_balance",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_min_balance",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_auth_addr",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_num_uint",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_num_byte_slice",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_extra_app_pages",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_apps_created",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_apps_opted_in",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_assets_created",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_assets",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_boxes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_box_bytes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_incentive_eligible",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        120,
                        149,
                        172,
                        195,
                        218,
                        241,
                        264,
                        287,
                        310,
                        333,
                        356,
                        378,
                        401
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        460,
                        506
                    ],
                    "errorMessage": "account funded"
                },
                {
                    "pc": [
                        429
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        123,
                        152,
                        175,
                        198,
                        221,
                        244,
                        267,
                        290,
                        313,
                        336,
                        359,
                        381,
                        404
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        464
                    ],
                    "errorMessage": "expected Account balance to match"
                },
                {
                    "pc": [
                        510
                    ],
                    "errorMessage": "expected Account min_balance to match"
                },
                {
                    "pc": [
                        455,
                        501,
                        544,
                        566,
                        588,
                        610,
                        632,
                        654,
                        676,
                        698,
                        720,
                        742,
                        764
                    ],
                    "errorMessage": "expected funded by index to match"
                },
                {
                    "pc": [
                        476
                    ],
                    "errorMessage": "expected op.balance by index to match"
                },
                {
                    "pc": [
                        471
                    ],
                    "errorMessage": "expected op.balance to match"
                },
                {
                    "pc": [
                        522
                    ],
                    "errorMessage": "expected op.min_balance by index to match"
                },
                {
                    "pc": [
                        517
                    ],
                    "errorMessage": "expected op.min_balance to match"
                },
                {
                    "pc": [
                        451,
                        497,
                        542,
                        564,
                        586,
                        608,
                        630,
                        652,
                        674,
                        696,
                        718,
                        740,
                        762
                    ],
                    "errorMessage": "expected value by index to match"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyACAQAmAQQVH3x1MRtBAZSCDQRfW0PkBHPck8cEVibf6wTciiW/BBmOvYwEIwGrJgSfaPymBKl1wtEE0eBIAQS2lmvlBBldVBgEatrj8QTfjP7lNhoAjg0BGwEEAO4A1wDAAKkAkgB7AGQATQA2AB8AAiNDMRkURDEYRDYaARfAHIgCY4ABACNPAlQoTFCwIkMxGRREMRhENhoBF8AciAIwFihMULAiQzEZFEQxGEQ2GgEXwByIAgMWKExQsCJDMRkURDEYRDYaARfAHIgB1hYoTFCwIkMxGRREMRhENhoBF8AciAGpFihMULAiQzEZFEQxGEQ2GgEXwByIAXwWKExQsCJDMRkURDEYRDYaARfAHIgBTxYoTFCwIkMxGRREMRhENhoBF8AciAEiFihMULAiQzEZFEQxGEQ2GgEXwByIAPUWKExQsCJDMRkURDEYRDYaARfAHIgAyBYoTFCwIkMxGRREMRhENhoBF8AciACbKExQsCJDMRkURDEYRDYaARfAHIgAVxYoTFCwIkMxGRREMRhENhoBF8AciAASFihMULAiQzEZQP7JMRgURCJDigEBi/9zACLAGhdJcwBLBE8CEkRPAhJEi/9zAERLAhJEi/9gSwISRGBLARJEiYoBAYv/cwEiwBoXSXMBSwRPAhJETwISRIv/cwFESwISRIv/eEsCEkR4SwESRImKAQGL/3MCIsAaF3MCSwNPAhJEEkSJigEBi/9zAyLAGhdzA0sDTwISRBJEiYoBAYv/cwQiwBoXcwRLA08CEkQSRImKAQGL/3MFIsAaF3MFSwNPAhJEEkSJigEBi/9zBiLAGhdzBksDTwISRBJEiYoBAYv/cwciwBoXcwdLA08CEkQSRImKAQGL/3MIIsAaF3MISwNPAhJEEkSJigEBi/9zCSLAGhdzCUsDTwISRBJEiYoBAYv/cwoiwBoXcwpLA08CEkQSRImKAQGL/3MLIsAaF3MLSwNPAhJEEkSJigEBi/9zDCLAGhdzDEsDTwISRBJEiQ==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}