{
    "name": "GlobalStateContract",
    "structs": {},
    "methods": [
        {
            "name": "get_implicit_key_arc4_uintn64",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_str",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_byte",
            "args": [],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_bool",
            "args": [],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_address",
            "args": [],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_uintn128",
            "args": [],
            "returns": {
                "type": "uint128"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_dynamic_bytes",
            "args": [],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_uintn64",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_str",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_byte",
            "args": [],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_bool",
            "args": [],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_address",
            "args": [],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_uintn128",
            "args": [],
            "returns": {
                "type": "uint128"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_dynamic_bytes",
            "args": [],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_uintn64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_str",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_byte",
            "args": [
                {
                    "type": "byte",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_bool",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_address",
            "args": [
                {
                    "type": "address",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_uintn128",
            "args": [
                {
                    "type": "uint128",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_dynamic_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_uintn64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_str",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_byte",
            "args": [
                {
                    "type": "byte",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_bool",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_address",
            "args": [
                {
                    "type": "address",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_uintn128",
            "args": [
                {
                    "type": "uint128",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_dynamic_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 14
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "implicitKeyArc4UintN64": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "aW1wbGljaXRLZXlBcmM0VWludE42NA=="
                },
                "implicitKeyArc4Str": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "aW1wbGljaXRLZXlBcmM0U3Ry"
                },
                "implicitKeyArc4Byte": {
                    "keyType": "AVMString",
                    "valueType": "byte",
                    "key": "aW1wbGljaXRLZXlBcmM0Qnl0ZQ=="
                },
                "implicitKeyArc4Bool": {
                    "keyType": "AVMString",
                    "valueType": "bool",
                    "key": "aW1wbGljaXRLZXlBcmM0Qm9vbA=="
                },
                "implicitKeyArc4Address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "aW1wbGljaXRLZXlBcmM0QWRkcmVzcw=="
                },
                "implicitKeyArc4UintN128": {
                    "keyType": "AVMString",
                    "valueType": "uint128",
                    "key": "aW1wbGljaXRLZXlBcmM0VWludE4xMjg="
                },
                "implicitKeyArc4DynamicBytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[]",
                    "key": "aW1wbGljaXRLZXlBcmM0RHluYW1pY0J5dGVz"
                },
                "arc4UintN64": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfdWludG42NA=="
                },
                "arc4Str": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfc3Ry"
                },
                "arc4Byte": {
                    "keyType": "AVMString",
                    "valueType": "byte",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYnl0ZQ=="
                },
                "arc4Bool": {
                    "keyType": "AVMString",
                    "valueType": "bool",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYm9vbA=="
                },
                "arc4Address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYWRkcmVzcw=="
                },
                "arc4UintN128": {
                    "keyType": "AVMString",
                    "valueType": "uint128",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfdWludG4xMjg="
                },
                "arc4DynamicBytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[]",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfZHluYW1pY19ieXRlcw=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        701,
                        717,
                        733,
                        749,
                        765,
                        781,
                        797,
                        813,
                        829,
                        845,
                        861,
                        877,
                        893,
                        909,
                        925,
                        940,
                        955,
                        970,
                        985,
                        1000,
                        1015,
                        1030,
                        1045,
                        1060,
                        1075,
                        1090,
                        1105,
                        1120
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        1140
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        704,
                        720,
                        736,
                        752,
                        768,
                        784,
                        800,
                        816,
                        832,
                        848,
                        864,
                        880,
                        896,
                        912,
                        928,
                        943,
                        958,
                        973,
                        988,
                        1003,
                        1018,
                        1033,
                        1048,
                        1063,
                        1078,
                        1093,
                        1108,
                        1123
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        1151,
                        1159,
                        1167,
                        1176,
                        1185,
                        1194,
                        1203,
                        1212,
                        1221,
                        1230,
                        1239,
                        1248,
                        1257,
                        1266
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy9hcnRpZmFjdHMvc3RhdGUtb3BzL2NvbnRyYWN0LmFsZ28udHM6Okdsb2JhbFN0YXRlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW06CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "events": [],
    "templateVariables": {}
}