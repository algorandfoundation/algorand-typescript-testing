{
    "name": "GlobalStateContract",
    "structs": {},
    "methods": [
        {
            "name": "get_implicit_key_arc4_uintn64",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_str",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_byte",
            "args": [],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_bool",
            "args": [],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_address",
            "args": [],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_uintn128",
            "args": [],
            "returns": {
                "type": "uint128"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_dynamic_bytes",
            "args": [],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_uintn64",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_str",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_byte",
            "args": [],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_bool",
            "args": [],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_address",
            "args": [],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_uintn128",
            "args": [],
            "returns": {
                "type": "uint128"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_dynamic_bytes",
            "args": [],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_uintn64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_str",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_byte",
            "args": [
                {
                    "type": "byte",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_bool",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_address",
            "args": [
                {
                    "type": "address",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_uintn128",
            "args": [
                {
                    "type": "uint128",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_implicit_key_arc4_dynamic_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_uintn64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_str",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_byte",
            "args": [
                {
                    "type": "byte",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_bool",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_address",
            "args": [
                {
                    "type": "address",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_uintn128",
            "args": [
                {
                    "type": "uint128",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_arc4_dynamic_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 14
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "implicitKeyArc4UintN64": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "aW1wbGljaXRLZXlBcmM0VWludE42NA=="
                },
                "implicitKeyArc4Str": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "aW1wbGljaXRLZXlBcmM0U3Ry"
                },
                "implicitKeyArc4Byte": {
                    "keyType": "AVMString",
                    "valueType": "byte",
                    "key": "aW1wbGljaXRLZXlBcmM0Qnl0ZQ=="
                },
                "implicitKeyArc4Bool": {
                    "keyType": "AVMString",
                    "valueType": "bool",
                    "key": "aW1wbGljaXRLZXlBcmM0Qm9vbA=="
                },
                "implicitKeyArc4Address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "aW1wbGljaXRLZXlBcmM0QWRkcmVzcw=="
                },
                "implicitKeyArc4UintN128": {
                    "keyType": "AVMString",
                    "valueType": "uint128",
                    "key": "aW1wbGljaXRLZXlBcmM0VWludE4xMjg="
                },
                "implicitKeyArc4DynamicBytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[]",
                    "key": "aW1wbGljaXRLZXlBcmM0RHluYW1pY0J5dGVz"
                },
                "arc4UintN64": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfdWludG42NA=="
                },
                "arc4Str": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfc3Ry"
                },
                "arc4Byte": {
                    "keyType": "AVMString",
                    "valueType": "byte",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYnl0ZQ=="
                },
                "arc4Bool": {
                    "keyType": "AVMString",
                    "valueType": "bool",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYm9vbA=="
                },
                "arc4Address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYWRkcmVzcw=="
                },
                "arc4UintN128": {
                    "keyType": "AVMString",
                    "valueType": "uint128",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfdWludG4xMjg="
                },
                "arc4DynamicBytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[]",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfZHluYW1pY19ieXRlcw=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        687,
                        702,
                        717,
                        732,
                        747,
                        762,
                        777,
                        792,
                        807,
                        822,
                        837,
                        852,
                        867,
                        882,
                        897,
                        913,
                        929,
                        945,
                        961,
                        977,
                        993,
                        1009,
                        1025,
                        1041,
                        1057,
                        1073,
                        1089,
                        1105
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        1126
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        690,
                        705,
                        720,
                        735,
                        750,
                        765,
                        780,
                        795,
                        810,
                        825,
                        840,
                        855,
                        870,
                        885,
                        900,
                        916,
                        932,
                        948,
                        964,
                        980,
                        996,
                        1012,
                        1028,
                        1044,
                        1060,
                        1076,
                        1092,
                        1108
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        1135,
                        1143,
                        1151,
                        1160,
                        1169,
                        1178,
                        1187,
                        1196,
                        1205,
                        1214,
                        1223,
                        1232,
                        1241,
                        1250
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAQAmEwQVH3x1FmltcGxpY2l0S2V5QXJjNFVpbnRONjQSaW1wbGljaXRLZXlBcmM0U3RyE2ltcGxpY2l0S2V5QXJjNEJ5dGUTaW1wbGljaXRLZXlBcmM0Qm9vbBZpbXBsaWNpdEtleUFyYzRBZGRyZXNzF2ltcGxpY2l0S2V5QXJjNFVpbnROMTI4G2ltcGxpY2l0S2V5QXJjNER5bmFtaWNCeXRlcxlleHBsaWNpdF9rZXlfYXJjNF91aW50bjY0FWV4cGxpY2l0X2tleV9hcmM0X3N0chZleHBsaWNpdF9rZXlfYXJjNF9ieXRlFmV4cGxpY2l0X2tleV9hcmM0X2Jvb2wZZXhwbGljaXRfa2V5X2FyYzRfYWRkcmVzcxpleHBsaWNpdF9rZXlfYXJjNF91aW50bjEyOB9leHBsaWNpdF9rZXlfYXJjNF9keW5hbWljX2J5dGVzCAAAAAAAAAU5BwAFSGVsbG8QAAAAEAAAAAAAAAAAAAAAAA8ADWR5bmFtaWMgYnl0ZXMxGEAARyknD2cqJxBnK4ABAGcnBIABgGcnBTIJZycGJxFnJwcnEmcnCCcPZycJJxBnJwqAAQBnJwuAAYBnJwwyCWcnDScRZycOJxJnMRtBAn+CHASKt/i/BIbsJPMEaRKOkARo1ZDiBETvBoEEXCG9YASqyOyxBKFSiM4EXyOs/QTe11AzBGYnnpMECW6SewQQa8ALBG6j+ZYEPfCizQSMTY+ABF7DEW0EIPVu7gQcFJpDBI5qHd4Eh/CGmwQCZGmhBPBUq3sE0uZG7wTmdKJwBKh+VA0EWKdASgQldwj3NhoAjhwBpAGUAYQBdAFkAVQBRAE0ASQBFAEEAPQA5ADUAMUAtgCnAJgAiQB6AGsAXABNAD4ALwAgABEAAiNDMRkURDEYRDYaAYgCnSJDMRkURDEYRDYaAYgChSJDMRkURDEYRDYaAYgCbSJDMRkURDEYRDYaAYgCVSJDMRkURDEYRDYaAYgCPSJDMRkURDEYRDYaAYgCJSJDMRkURDEYRDYaAYgCDSJDMRkURDEYRDYaAYgB9SJDMRkURDEYRDYaAYgB3SJDMRkURDEYRDYaAYgBxSJDMRkURDEYRDYaAYgBrSJDMRkURDEYRDYaAYgBliJDMRkURDEYRDYaAYgBfyJDMRkURDEYRDYaAYgBaCJDMRkURDEYRIgBUyhMULAiQzEZFEQxGESIATooTFCwIkMxGRREMRhEiAEhKExQsCJDMRkURDEYRIgBCChMULAiQzEZFEQxGESIAO8oTFCwIkMxGRREMRhEiADWKExQsCJDMRkURDEYRIgAvShMULAiQzEZFEQxGESIAKQoTFCwIkMxGRREMRhEiACLKExQsCJDMRkURDEYRIgAcihMULAiQzEZFEQxGESIAFkoTFCwIkMxGRREMRhEiABBKExQsCJDMRkURDEYRIgAKShMULAiQzEZFEQxGESIABEoTFCwIkMxGUD+RzEYFEQiQ4oAASMpZUSJigABIyplRImKAAEjK2VEiYoAASMnBGVEiYoAASMnBWVEiYoAASMnBmVEiYoAASMnB2VEiYoAASMnCGVEiYoAASMnCWVEiYoAASMnCmVEiYoAASMnC2VEiYoAASMnDGVEiYoAASMnDWVEiYoAASMnDmVEiYoBACmL/2eJigEAKov/Z4mKAQAri/9niYoBACcEi/9niYoBACcFi/9niYoBACcGi/9niYoBACcHi/9niYoBACcIi/9niYoBACcJi/9niYoBACcKi/9niYoBACcLi/9niYoBACcMi/9niYoBACcNi/9niYoBACcOi/9niQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 2,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}