#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 1 6 1000
    bytecblock 0x068101
    // tests/artifacts/state-ops/contract.algo.ts:476
    // export class ITxnOpsContract extends arc4.Contract {
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0x4e7cd9cb // method "verify_itxn_ops()void"
    txna ApplicationArgs 0
    match main_verify_itxn_ops_route@3

main_after_if_else@10:
    // tests/artifacts/state-ops/contract.algo.ts:476
    // export class ITxnOpsContract extends arc4.Contract {
    pushint 0 // 0
    return

main_verify_itxn_ops_route@3:
    // tests/artifacts/state-ops/contract.algo.ts:477
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub verify_itxn_ops
    intc_0 // 1
    return

main_bare_routing@6:
    // tests/artifacts/state-ops/contract.algo.ts:476
    // export class ITxnOpsContract extends arc4.Contract {
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return


// tests/artifacts/state-ops/contract.algo.ts::ITxnOpsContract.verify_itxn_ops() -> void:
verify_itxn_ops:
    // tests/artifacts/state-ops/contract.algo.ts:477-478
    // @arc4.abimethod()
    // public verify_itxn_ops() {
    proto 0 0
    // tests/artifacts/state-ops/contract.algo.ts:479
    // op.ITxnCreate.begin()
    itxn_begin
    // tests/artifacts/state-ops/contract.algo.ts:480
    // op.ITxnCreate.setTypeEnum(TransactionType.ApplicationCall)
    intc_1 // 6
    itxn_field TypeEnum
    // tests/artifacts/state-ops/contract.algo.ts:481
    // op.ITxnCreate.setOnCompletion(arc4.OnCompleteAction.DeleteApplication)
    pushint 5 // 5
    itxn_field OnCompletion
    // tests/artifacts/state-ops/contract.algo.ts:482
    // op.ITxnCreate.setApprovalProgram(Bytes.fromHex('068101'))
    bytec_0 // 0x068101
    itxn_field ApprovalProgram
    // tests/artifacts/state-ops/contract.algo.ts:485
    // op.ITxnCreate.setApprovalProgramPages(Bytes.fromHex('068101'))
    bytec_0 // 0x068101
    itxn_field ApprovalProgramPages
    // tests/artifacts/state-ops/contract.algo.ts:486
    // op.ITxnCreate.setClearStateProgram(Bytes.fromHex('068101'))
    bytec_0 // 0x068101
    itxn_field ClearStateProgram
    // tests/artifacts/state-ops/contract.algo.ts:487
    // op.ITxnCreate.setFee(op.Global.minTxnFee)
    global MinTxnFee
    itxn_field Fee
    // tests/artifacts/state-ops/contract.algo.ts:488
    // op.ITxnCreate.next()
    itxn_next
    // tests/artifacts/state-ops/contract.algo.ts:489
    // op.ITxnCreate.setTypeEnum(TransactionType.Payment)
    intc_0 // 1
    itxn_field TypeEnum
    // tests/artifacts/state-ops/contract.algo.ts:490
    // op.ITxnCreate.setReceiver(op.Global.creatorAddress)
    global CreatorAddress
    itxn_field Receiver
    // tests/artifacts/state-ops/contract.algo.ts:491
    // op.ITxnCreate.setAmount(Uint64(1000))
    intc_2 // 1000
    itxn_field Amount
    // tests/artifacts/state-ops/contract.algo.ts:492
    // op.ITxnCreate.submit()
    itxn_submit
    // tests/artifacts/state-ops/contract.algo.ts:494
    // assert(op.ITxn.receiver === op.Global.creatorAddress)
    itxn Receiver
    global CreatorAddress
    ==
    assert
    // tests/artifacts/state-ops/contract.algo.ts:495
    // assert(op.ITxn.amount === Uint64(1000))
    itxn Amount
    intc_2 // 1000
    ==
    assert
    // tests/artifacts/state-ops/contract.algo.ts:496
    // assert(op.ITxn.typeEnum === TransactionType.Payment)
    itxn TypeEnum
    intc_0 // 1
    ==
    assert
    // tests/artifacts/state-ops/contract.algo.ts:498
    // assert(op.GITxn.typeEnum(0) === TransactionType.ApplicationCall)
    gitxn 0 TypeEnum
    intc_1 // 6
    ==
    assert
    // tests/artifacts/state-ops/contract.algo.ts:499
    // assert(op.GITxn.typeEnum(1) === TransactionType.Payment)
    gitxn 1 TypeEnum
    intc_0 // 1
    ==
    assert
    retsub
