{
    "name": "LocalStateContract",
    "structs": {},
    "methods": [
        {
            "name": "opt_in",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_uintn64",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_str",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_byte",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_bool",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_address",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_uintn128",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint128"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_dynamic_bytes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_uintn64",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_str",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_byte",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_bool",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_address",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_uintn128",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint128"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_dynamic_bytes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 14
            }
        },
        "keys": {
            "global": {},
            "local": {
                "implicitKeyArc4UintN64": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "aW1wbGljaXRLZXlBcmM0VWludE42NA=="
                },
                "implicitKeyArc4Str": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "aW1wbGljaXRLZXlBcmM0U3Ry"
                },
                "implicitKeyArc4Byte": {
                    "keyType": "AVMString",
                    "valueType": "byte",
                    "key": "aW1wbGljaXRLZXlBcmM0Qnl0ZQ=="
                },
                "implicitKeyArc4Bool": {
                    "keyType": "AVMString",
                    "valueType": "bool",
                    "key": "aW1wbGljaXRLZXlBcmM0Qm9vbA=="
                },
                "implicitKeyArc4Address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "aW1wbGljaXRLZXlBcmM0QWRkcmVzcw=="
                },
                "implicitKeyArc4UintN128": {
                    "keyType": "AVMString",
                    "valueType": "uint128",
                    "key": "aW1wbGljaXRLZXlBcmM0VWludE4xMjg="
                },
                "implicitKeyArc4DynamicBytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[]",
                    "key": "aW1wbGljaXRLZXlBcmM0RHluYW1pY0J5dGVz"
                },
                "arc4UintN64": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfdWludG42NA=="
                },
                "arc4Str": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfc3Ry"
                },
                "arc4Byte": {
                    "keyType": "AVMString",
                    "valueType": "byte",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYnl0ZQ=="
                },
                "arc4Bool": {
                    "keyType": "AVMString",
                    "valueType": "bool",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYm9vbA=="
                },
                "arc4Address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYWRkcmVzcw=="
                },
                "arc4UintN128": {
                    "keyType": "AVMString",
                    "valueType": "uint128",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfdWludG4xMjg="
                },
                "arc4DynamicBytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[]",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfZHluYW1pY19ieXRlcw=="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        540,
                        562,
                        584,
                        606,
                        628,
                        650,
                        672,
                        694,
                        716,
                        738,
                        760,
                        782,
                        804,
                        826
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        528
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        853
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        531,
                        543,
                        565,
                        587,
                        609,
                        631,
                        653,
                        675,
                        697,
                        719,
                        741,
                        763,
                        785,
                        807,
                        829
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        968,
                        978,
                        989,
                        1000,
                        1011,
                        1022,
                        1033,
                        1044,
                        1055,
                        1066,
                        1077,
                        1088,
                        1099,
                        1110
                    ],
                    "errorMessage": "check LocalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy9hcnRpZmFjdHMvc3RhdGUtb3BzL2NvbnRyYWN0LmFsZ28udHM6OkxvY2FsU3RhdGVDb250cmFjdC5jbGVhclN0YXRlUHJvZ3JhbToKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "events": [],
    "templateVariables": {}
}