{
    "name": "LocalStateContract",
    "structs": {},
    "methods": [
        {
            "name": "opt_in",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_uintn64",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_str",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_byte",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_bool",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_address",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_uintn128",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint128"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_implicit_key_arc4_dynamic_bytes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_uintn64",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_str",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_byte",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_bool",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_address",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_uintn128",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint128"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_arc4_dynamic_bytes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 14
            }
        },
        "keys": {
            "global": {},
            "local": {
                "implicitKeyArc4UintN64": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "aW1wbGljaXRLZXlBcmM0VWludE42NA=="
                },
                "implicitKeyArc4Str": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "aW1wbGljaXRLZXlBcmM0U3Ry"
                },
                "implicitKeyArc4Byte": {
                    "keyType": "AVMString",
                    "valueType": "byte",
                    "key": "aW1wbGljaXRLZXlBcmM0Qnl0ZQ=="
                },
                "implicitKeyArc4Bool": {
                    "keyType": "AVMString",
                    "valueType": "bool",
                    "key": "aW1wbGljaXRLZXlBcmM0Qm9vbA=="
                },
                "implicitKeyArc4Address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "aW1wbGljaXRLZXlBcmM0QWRkcmVzcw=="
                },
                "implicitKeyArc4UintN128": {
                    "keyType": "AVMString",
                    "valueType": "uint128",
                    "key": "aW1wbGljaXRLZXlBcmM0VWludE4xMjg="
                },
                "implicitKeyArc4DynamicBytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[]",
                    "key": "aW1wbGljaXRLZXlBcmM0RHluYW1pY0J5dGVz"
                },
                "arc4UintN64": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfdWludG42NA=="
                },
                "arc4Str": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfc3Ry"
                },
                "arc4Byte": {
                    "keyType": "AVMString",
                    "valueType": "byte",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYnl0ZQ=="
                },
                "arc4Bool": {
                    "keyType": "AVMString",
                    "valueType": "bool",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYm9vbA=="
                },
                "arc4Address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfYWRkcmVzcw=="
                },
                "arc4UintN128": {
                    "keyType": "AVMString",
                    "valueType": "uint128",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfdWludG4xMjg="
                },
                "arc4DynamicBytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[]",
                    "key": "ZXhwbGljaXRfa2V5X2FyYzRfZHluYW1pY19ieXRlcw=="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        520,
                        542,
                        564,
                        586,
                        608,
                        630,
                        652,
                        674,
                        696,
                        718,
                        740,
                        762,
                        784,
                        806
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        829
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        846
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        523,
                        545,
                        567,
                        589,
                        611,
                        633,
                        655,
                        677,
                        699,
                        721,
                        743,
                        765,
                        787,
                        809,
                        832
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        959,
                        969,
                        980,
                        991,
                        1002,
                        1013,
                        1024,
                        1035,
                        1046,
                        1057,
                        1068,
                        1079,
                        1090,
                        1101
                    ],
                    "errorMessage": "check LocalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyACAQAmEwQVH3x1FmltcGxpY2l0S2V5QXJjNFVpbnRONjQIAAAAAAAABTkSaW1wbGljaXRLZXlBcmM0U3RyBwAFSGVsbG8TaW1wbGljaXRLZXlBcmM0Qnl0ZRNpbXBsaWNpdEtleUFyYzRCb29sFmltcGxpY2l0S2V5QXJjNEFkZHJlc3MXaW1wbGljaXRLZXlBcmM0VWludE4xMjgQAAAAEAAAAAAAAAAAAAAAABtpbXBsaWNpdEtleUFyYzREeW5hbWljQnl0ZXMPAA1keW5hbWljIGJ5dGVzGWV4cGxpY2l0X2tleV9hcmM0X3VpbnRuNjQVZXhwbGljaXRfa2V5X2FyYzRfc3RyFmV4cGxpY2l0X2tleV9hcmM0X2J5dGUWZXhwbGljaXRfa2V5X2FyYzRfYm9vbBlleHBsaWNpdF9rZXlfYXJjNF9hZGRyZXNzGmV4cGxpY2l0X2tleV9hcmM0X3VpbnRuMTI4H2V4cGxpY2l0X2tleV9hcmM0X2R5bmFtaWNfYnl0ZXMxG0EBs4IPBDDG1YoE7s3woARsbxfaBOz2M7AEPlMSIwQ+1nmdBG/s3YAEZ2qHwgQeD4lRBELoX9cEZSHUmwTgfFbNBKoZ0rUEuSIxLQT8D+7ZNhoAjg8BNgEgAQoA9ADeAMgAsgCcAIYAcABaAEQALgAYAAIjQzEZFEQxGEQ2GgEXwByIAi8oTFCwIkMxGRREMRhENhoBF8AciAIOKExQsCJDMRkURDEYRDYaARfAHIgB7ShMULAiQzEZFEQxGEQ2GgEXwByIAcwoTFCwIkMxGRREMRhENhoBF8AciAGrKExQsCJDMRkURDEYRDYaARfAHIgBiihMULAiQzEZFEQxGEQ2GgEXwByIAWkoTFCwIkMxGRREMRhENhoBF8AciAFIKExQsCJDMRkURDEYRDYaARfAHIgBJyhMULAiQzEZFEQxGEQ2GgEXwByIAQYoTFCwIkMxGRREMRhENhoBF8AciADlKExQsCJDMRkURDEYRDYaARfAHIgAxChMULAiQzEZFEQxGEQ2GgEXwByIAKQoTFCwIkMxGRREMRhENhoBF8AciACEKExQsCJDMRkiEkQxGESIAA0iQzEZQP64MRgURCJDigAAMgkpKmYyCSsnBGYyCScFgAEAZjIJJwaAAYBmMgknBzIJZjIJJwgnCWYyCScKJwtmMgknDCpmMgknDScEZjIJJw6AAQBmMgknD4ABgGYyCScQMglmMgknEScJZjIJJxInC2aJigEBi/8jKWNEiYoBAYv/IytjRImKAQGL/yMnBWNEiYoBAYv/IycGY0SJigEBi/8jJwdjRImKAQGL/yMnCGNEiYoBAYv/IycKY0SJigEBi/8jJwxjRImKAQGL/yMnDWNEiYoBAYv/IycOY0SJigEBi/8jJw9jRImKAQGL/yMnEGNEiYoBAYv/IycRY0SJigEBi/8jJxJjRIk=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}