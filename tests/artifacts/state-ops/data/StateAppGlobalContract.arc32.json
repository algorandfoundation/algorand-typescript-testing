{
    "hints": {
        "verify_get_bytes(byte[])byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_get_uint64(byte[])uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_get_ex_bytes(application,byte[])(byte[],bool)": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_get_ex_uint64(application,byte[])(uint64,bool)": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_put_uint64(byte[],uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_put_bytes(byte[],byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_delete(byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy9hcnRpZmFjdHMvc3RhdGUtb3BzL2NvbnRyYWN0LmFsZ28udHM6OlN0YXRlQXBwR2xvYmFsQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW06CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "globalBytes": {
                    "type": "bytes",
                    "key": "global_bytes"
                },
                "globalUint64": {
                    "type": "uint64",
                    "key": "global_uint64"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "StateAppGlobalContract",
        "methods": [
            {
                "name": "verify_get_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_get_uint64",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_get_ex_bytes",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(byte[],bool)"
                }
            },
            {
                "name": "verify_get_ex_uint64",
                "args": [
                    {
                        "type": "application",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(uint64,bool)"
                }
            },
            {
                "name": "verify_put_uint64",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify_put_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify_delete",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}