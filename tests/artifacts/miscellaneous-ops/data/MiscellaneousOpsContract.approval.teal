#pragma version 10

tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.approvalProgram:
    intcblock 1 0
    bytecblock 0x151f7c75
    callsub __puya_arc4_router__
    return


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@38
    pushbytess 0x45847eea 0xf57aceb5 0x7d631730 0xa1b24441 0xcd7be1ac 0x7cfda64b 0x54a910d9 0xc46568de 0x7a46a6ae 0x04372209 0x7e5f6d72 0x24ebcf84 0x9c0b3397 0x0ad40da4 0x95178870 0xdeedc99b 0xab2150bb 0x02a54017 0x3db66b41 0xc7ea8c2a 0x1dcea50c 0x16166f9a 0x2f472065 0xd5a739c3 0x61f3b3e1 0x56cf368b 0x919ffbd2 0x8e30f4e7 0x89f81d92 0xd5260327 0x114c8c6d 0x39e9e62a 0xd6a4c05e 0x1ef8151a // method "verify_addw(uint64,uint64)(uint64,uint64)", method "verify_base64_decode_standard(byte[])byte[]", method "verify_base64_decode_url(byte[])byte[]", method "verify_bytes_bitlen(byte[],uint64)uint64", method "verify_uint64_bitlen(uint64)uint64", method "verify_bsqrt(byte[])byte[]", method "verify_btoi(byte[])uint64", method "verify_bzero(uint64)byte[]", method "verify_concat(byte[],byte[],uint64,uint64)byte[]", method "verify_divmodw(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64)", method "verify_divw(uint64,uint64,uint64)uint64", method "verify_err()void", method "verify_exp(uint64,uint64)uint64", method "verify_expw(uint64,uint64)(uint64,uint64)", method "verify_extract(byte[],uint64,uint64)byte[]", method "verify_extract_from_2(byte[])byte[]", method "verify_extract_uint16(byte[],uint64)uint64", method "verify_extract_uint32(byte[],uint64)uint64", method "verify_extract_uint64(byte[],uint64)uint64", method "verify_getbit_bytes(byte[],uint64)uint64", method "verify_getbit_uint64(uint64,uint64)uint64", method "verify_getbyte(byte[],uint64)uint64", method "verify_itob(uint64)byte[]", method "verify_mulw(uint64,uint64)(uint64,uint64)", method "verify_replace(byte[],uint64,byte[])byte[]", method "verify_select_bytes(byte[],byte[],uint64)byte[]", method "verify_select_uint64(uint64,uint64,uint64)uint64", method "verify_setbit_bytes(byte[],uint64,uint64)byte[]", method "verify_setbit_uint64(uint64,uint64,uint64)uint64", method "verify_setbyte(byte[],uint64,uint64)byte[]", method "verify_shl(uint64,uint64)uint64", method "verify_shr(uint64,uint64)uint64", method "verify_sqrt(uint64)uint64", method "verify_substring(byte[],uint64,uint64)byte[]"
    txna ApplicationArgs 0
    match __puya_arc4_router___verify_addw_route@2 __puya_arc4_router___verify_base64_decode_standard_route@3 __puya_arc4_router___verify_base64_decode_url_route@4 __puya_arc4_router___verify_bytes_bitlen_route@5 __puya_arc4_router___verify_uint64_bitlen_route@6 __puya_arc4_router___verify_bsqrt_route@7 __puya_arc4_router___verify_btoi_route@8 __puya_arc4_router___verify_bzero_route@9 __puya_arc4_router___verify_concat_route@10 __puya_arc4_router___verify_divmodw_route@11 __puya_arc4_router___verify_divw_route@12 __puya_arc4_router___verify_err_route@13 __puya_arc4_router___verify_exp_route@14 __puya_arc4_router___verify_expw_route@15 __puya_arc4_router___verify_extract_route@16 __puya_arc4_router___verify_extract_from_2_route@17 __puya_arc4_router___verify_extract_uint16_route@18 __puya_arc4_router___verify_extract_uint32_route@19 __puya_arc4_router___verify_extract_uint64_route@20 __puya_arc4_router___verify_getbit_bytes_route@21 __puya_arc4_router___verify_getbit_uint64_route@22 __puya_arc4_router___verify_getbyte_route@23 __puya_arc4_router___verify_itob_route@24 __puya_arc4_router___verify_mulw_route@25 __puya_arc4_router___verify_replace_route@26 __puya_arc4_router___verify_select_bytes_route@27 __puya_arc4_router___verify_select_uint64_route@28 __puya_arc4_router___verify_setbit_bytes_route@29 __puya_arc4_router___verify_setbit_uint64_route@30 __puya_arc4_router___verify_setbyte_route@31 __puya_arc4_router___verify_shl_route@32 __puya_arc4_router___verify_shr_route@33 __puya_arc4_router___verify_sqrt_route@34 __puya_arc4_router___verify_substring_route@35
    intc_1 // 0
    retsub

__puya_arc4_router___verify_addw_route@2:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:4
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:4
    // @arc4.abimethod()
    callsub verify_addw
    swap
    itob
    swap
    itob
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_base64_decode_standard_route@3:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:10
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:10
    // @arc4.abimethod()
    callsub verify_base64_decode_standard
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_base64_decode_url_route@4:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:16
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:16
    // @arc4.abimethod()
    callsub verify_base64_decode_url
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_bytes_bitlen_route@5:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:22
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:22
    // @arc4.abimethod()
    callsub verify_bytes_bitlen
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_uint64_bitlen_route@6:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:29
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:29
    // @arc4.abimethod()
    callsub verify_uint64_bitlen
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_bsqrt_route@7:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:35
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:35
    // @arc4.abimethod()
    callsub verify_bsqrt
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_btoi_route@8:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:42
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:42
    // @arc4.abimethod()
    callsub verify_btoi
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_bzero_route@9:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:48
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:48
    // @arc4.abimethod()
    callsub verify_bzero
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_concat_route@10:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:54
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    txna ApplicationArgs 3
    btoi
    txna ApplicationArgs 4
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:54
    // @arc4.abimethod()
    callsub verify_concat
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_divmodw_route@11:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:63
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    txna ApplicationArgs 4
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:63
    // @arc4.abimethod()
    callsub verify_divmodw
    uncover 3
    itob
    uncover 3
    itob
    uncover 3
    itob
    uncover 3
    itob
    uncover 3
    uncover 3
    concat
    uncover 2
    concat
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_divw_route@12:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:69
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:69
    // @arc4.abimethod()
    callsub verify_divw
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_err_route@13:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:75
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub verify_err
    intc_0 // 1
    retsub

__puya_arc4_router___verify_exp_route@14:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:80
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:80
    // @arc4.abimethod()
    callsub verify_exp
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_expw_route@15:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:86
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:86
    // @arc4.abimethod()
    callsub verify_expw
    swap
    itob
    swap
    itob
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_extract_route@16:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:92
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:92
    // @arc4.abimethod()
    callsub verify_extract
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_extract_from_2_route@17:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:98
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:98
    // @arc4.abimethod()
    callsub verify_extract_from_2
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_extract_uint16_route@18:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:104
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:104
    // @arc4.abimethod()
    callsub verify_extract_uint16
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_extract_uint32_route@19:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:110
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:110
    // @arc4.abimethod()
    callsub verify_extract_uint32
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_extract_uint64_route@20:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:116
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:116
    // @arc4.abimethod()
    callsub verify_extract_uint64
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_getbit_bytes_route@21:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:122
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:122
    // @arc4.abimethod()
    callsub verify_getbit_bytes
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_getbit_uint64_route@22:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:128
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:128
    // @arc4.abimethod()
    callsub verify_getbit_uint64
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_getbyte_route@23:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:134
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:134
    // @arc4.abimethod()
    callsub verify_getbyte
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_itob_route@24:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:140
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:140
    // @arc4.abimethod()
    callsub verify_itob
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_mulw_route@25:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:146
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:146
    // @arc4.abimethod()
    callsub verify_mulw
    swap
    itob
    swap
    itob
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_replace_route@26:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:152
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    extract 2 0
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:152
    // @arc4.abimethod()
    callsub verify_replace
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_select_bytes_route@27:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:158
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:158
    // @arc4.abimethod()
    callsub verify_select_bytes
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_select_uint64_route@28:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:164
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:164
    // @arc4.abimethod()
    callsub verify_select_uint64
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_setbit_bytes_route@29:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:170
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:170
    // @arc4.abimethod()
    callsub verify_setbit_bytes
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_setbit_uint64_route@30:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:176
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:176
    // @arc4.abimethod()
    callsub verify_setbit_uint64
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_setbyte_route@31:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:182
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:182
    // @arc4.abimethod()
    callsub verify_setbyte
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_shl_route@32:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:188
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:188
    // @arc4.abimethod()
    callsub verify_shl
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_shr_route@33:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:194
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:194
    // @arc4.abimethod()
    callsub verify_shr
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_sqrt_route@34:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:200
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:200
    // @arc4.abimethod()
    callsub verify_sqrt
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___verify_substring_route@35:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:206
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:206
    // @arc4.abimethod()
    callsub verify_substring
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___bare_routing@38:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@42
    txn ApplicationID
    !
    assert // is creating
    intc_0 // 1
    retsub

__puya_arc4_router___after_if_else@42:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:3
    // export class MiscellaneousOpsContract extends arc4.Contract {
    intc_1 // 0
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_addw(a: uint64, b: uint64) -> uint64, uint64:
verify_addw:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:4-5
    // @arc4.abimethod()
    // public verify_addw(a: uint64, b: uint64): readonly [uint64, uint64] {
    proto 2 2
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:6
    // const result = op.addw(a, b)
    frame_dig -2
    frame_dig -1
    addw
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:7
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_base64_decode_standard(a: bytes) -> bytes:
verify_base64_decode_standard:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:10-11
    // @arc4.abimethod()
    // public verify_base64_decode_standard(a: bytes): bytes {
    proto 1 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:12
    // const result = op.base64Decode(Base64.StdEncoding, a)
    frame_dig -1
    base64_decode StdEncoding
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:13
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_base64_decode_url(a: bytes) -> bytes:
verify_base64_decode_url:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:16-17
    // @arc4.abimethod()
    // public verify_base64_decode_url(a: bytes): bytes {
    proto 1 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:18
    // const result = op.base64Decode(Base64.URLEncoding, a)
    frame_dig -1
    base64_decode URLEncoding
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:19
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_bytes_bitlen(a: bytes, pad_a_size: uint64) -> uint64:
verify_bytes_bitlen:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:22-23
    // @arc4.abimethod()
    // public verify_bytes_bitlen(a: bytes, pad_a_size: uint64): uint64 {
    proto 2 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:24
    // const paddedA = op.bzero(pad_a_size).concat(a)
    frame_dig -1
    bzero
    frame_dig -2
    concat
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:25
    // const result = op.bitLength(paddedA)
    bitlen
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:26
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_uint64_bitlen(a: uint64) -> uint64:
verify_uint64_bitlen:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:29-30
    // @arc4.abimethod()
    // public verify_uint64_bitlen(a: uint64): uint64 {
    proto 1 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:31
    // const result = op.bitLength(a)
    frame_dig -1
    bitlen
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:32
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_bsqrt(a: bytes) -> bytes:
verify_bsqrt:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:35-36
    // @arc4.abimethod()
    // public verify_bsqrt(a: bytes): bytes {
    proto 1 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:38
    // const result = op.bsqrt(a_biguint)
    frame_dig -1
    bsqrt
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:39
    // return Bytes(result)
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_btoi(a: bytes) -> uint64:
verify_btoi:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:42-43
    // @arc4.abimethod()
    // public verify_btoi(a: bytes): uint64 {
    proto 1 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:44
    // const result = op.btoi(a)
    frame_dig -1
    btoi
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:45
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_bzero(a: uint64) -> bytes:
verify_bzero:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:48-49
    // @arc4.abimethod()
    // public verify_bzero(a: uint64): bytes {
    proto 1 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:50
    // const result = op.bzero(a)
    frame_dig -1
    bzero
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:51
    // return op.sha256(result)
    sha256
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_concat(a: bytes, b: bytes, pad_a_size: uint64, pad_b_size: uint64) -> bytes:
verify_concat:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:54-55
    // @arc4.abimethod()
    // public verify_concat(a: bytes, b: bytes, pad_a_size: uint64, pad_b_size: uint64): bytes {
    proto 4 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:56
    // const paddedA = op.bzero(pad_a_size).concat(a)
    frame_dig -2
    bzero
    frame_dig -4
    concat
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:57
    // const paddedB = op.bzero(pad_b_size).concat(b)
    frame_dig -1
    bzero
    frame_dig -3
    concat
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:58
    // const result = paddedA.concat(paddedB)
    concat
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:59
    // const resultHash = op.sha256(result)
    sha256
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:60
    // return resultHash
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_divmodw(a: uint64, b: uint64, c: uint64, d: uint64) -> uint64, uint64, uint64, uint64:
verify_divmodw:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:63-64
    // @arc4.abimethod()
    // public verify_divmodw(a: uint64, b: uint64, c: uint64, d: uint64): readonly [uint64, uint64, uint64, uint64] {
    proto 4 4
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:65
    // const result = op.divmodw(a, b, c, d)
    frame_dig -4
    frame_dig -3
    frame_dig -2
    frame_dig -1
    divmodw
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:66
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_divw(a: uint64, b: uint64, c: uint64) -> uint64:
verify_divw:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:69-70
    // @arc4.abimethod()
    // public verify_divw(a: uint64, b: uint64, c: uint64): uint64 {
    proto 3 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:71
    // const result = op.divw(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    divw
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:72
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_err() -> void:
verify_err:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:75-76
    // @arc4.abimethod()
    // public verify_err(): void {
    proto 0 0
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:77
    // err()
    err


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_exp(a: uint64, b: uint64) -> uint64:
verify_exp:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:80-81
    // @arc4.abimethod()
    // public verify_exp(a: uint64, b: uint64): uint64 {
    proto 2 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:82
    // const result = op.exp(a, b)
    frame_dig -2
    frame_dig -1
    exp
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:83
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_expw(a: uint64, b: uint64) -> uint64, uint64:
verify_expw:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:86-87
    // @arc4.abimethod()
    // public verify_expw(a: uint64, b: uint64): readonly [uint64, uint64] {
    proto 2 2
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:88
    // const result = op.expw(a, b)
    frame_dig -2
    frame_dig -1
    expw
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:89
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_extract(a: bytes, b: uint64, c: uint64) -> bytes:
verify_extract:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:92-93
    // @arc4.abimethod()
    // public verify_extract(a: bytes, b: uint64, c: uint64): bytes {
    proto 3 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:94
    // const result = op.extract(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    extract3
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:95
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_extract_from_2(a: bytes) -> bytes:
verify_extract_from_2:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:98-99
    // @arc4.abimethod()
    // public verify_extract_from_2(a: bytes): bytes {
    proto 1 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:100
    // const result = op.extract(a, 2, 0)
    frame_dig -1
    extract 2 0
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:101
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_extract_uint16(a: bytes, b: uint64) -> uint64:
verify_extract_uint16:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:104-105
    // @arc4.abimethod()
    // public verify_extract_uint16(a: bytes, b: uint64): uint64 {
    proto 2 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:106
    // const result = op.extractUint16(a, b)
    frame_dig -2
    frame_dig -1
    extract_uint16
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:107
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_extract_uint32(a: bytes, b: uint64) -> uint64:
verify_extract_uint32:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:110-111
    // @arc4.abimethod()
    // public verify_extract_uint32(a: bytes, b: uint64): uint64 {
    proto 2 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:112
    // const result = op.extractUint32(a, b)
    frame_dig -2
    frame_dig -1
    extract_uint32
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:113
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_extract_uint64(a: bytes, b: uint64) -> uint64:
verify_extract_uint64:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:116-117
    // @arc4.abimethod()
    // public verify_extract_uint64(a: bytes, b: uint64): uint64 {
    proto 2 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:118
    // const result = op.extractUint64(a, b)
    frame_dig -2
    frame_dig -1
    extract_uint64
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:119
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_getbit_bytes(a: bytes, b: uint64) -> uint64:
verify_getbit_bytes:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:122-123
    // @arc4.abimethod()
    // public verify_getbit_bytes(a: bytes, b: uint64): uint64 {
    proto 2 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:124
    // const result = op.getBit(a, b)
    frame_dig -2
    frame_dig -1
    getbit
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:125
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_getbit_uint64(a: uint64, b: uint64) -> uint64:
verify_getbit_uint64:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:128-129
    // @arc4.abimethod()
    // public verify_getbit_uint64(a: uint64, b: uint64): uint64 {
    proto 2 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:130
    // const result = op.getBit(a, b)
    frame_dig -2
    frame_dig -1
    getbit
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:131
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_getbyte(a: bytes, b: uint64) -> uint64:
verify_getbyte:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:134-135
    // @arc4.abimethod()
    // public verify_getbyte(a: bytes, b: uint64): uint64 {
    proto 2 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:136
    // const result = op.getByte(a, b)
    frame_dig -2
    frame_dig -1
    getbyte
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:137
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_itob(a: uint64) -> bytes:
verify_itob:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:140-141
    // @arc4.abimethod()
    // public verify_itob(a: uint64): bytes {
    proto 1 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:142
    // const result = op.itob(a)
    frame_dig -1
    itob
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:143
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_mulw(a: uint64, b: uint64) -> uint64, uint64:
verify_mulw:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:146-147
    // @arc4.abimethod()
    // public verify_mulw(a: uint64, b: uint64): readonly [uint64, uint64] {
    proto 2 2
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:148
    // const result = op.mulw(a, b)
    frame_dig -2
    frame_dig -1
    mulw
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:149
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_replace(a: bytes, b: uint64, c: bytes) -> bytes:
verify_replace:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:152-153
    // @arc4.abimethod()
    // public verify_replace(a: bytes, b: uint64, c: bytes): bytes {
    proto 3 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:154
    // const result = op.replace(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    replace3
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:155
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_select_bytes(a: bytes, b: bytes, c: uint64) -> bytes:
verify_select_bytes:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:158-159
    // @arc4.abimethod()
    // public verify_select_bytes(a: bytes, b: bytes, c: uint64): bytes {
    proto 3 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:160
    // const result = op.select(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    select
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:161
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_select_uint64(a: uint64, b: uint64, c: uint64) -> uint64:
verify_select_uint64:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:164-165
    // @arc4.abimethod()
    // public verify_select_uint64(a: uint64, b: uint64, c: uint64): uint64 {
    proto 3 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:166
    // const result = op.select(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    select
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:167
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_setbit_bytes(a: bytes, b: uint64, c: uint64) -> bytes:
verify_setbit_bytes:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:170-171
    // @arc4.abimethod()
    // public verify_setbit_bytes(a: bytes, b: uint64, c: uint64): bytes {
    proto 3 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:172
    // const result = op.setBit(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    setbit
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:173
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_setbit_uint64(a: uint64, b: uint64, c: uint64) -> uint64:
verify_setbit_uint64:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:176-177
    // @arc4.abimethod()
    // public verify_setbit_uint64(a: uint64, b: uint64, c: uint64): uint64 {
    proto 3 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:178
    // const result = op.setBit(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    setbit
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:179
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_setbyte(a: bytes, b: uint64, c: uint64) -> bytes:
verify_setbyte:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:182-183
    // @arc4.abimethod()
    // public verify_setbyte(a: bytes, b: uint64, c: uint64): bytes {
    proto 3 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:184
    // const result = op.setByte(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    setbyte
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:185
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_shl(a: uint64, b: uint64) -> uint64:
verify_shl:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:188-189
    // @arc4.abimethod()
    // public verify_shl(a: uint64, b: uint64): uint64 {
    proto 2 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:190
    // const result = op.shl(a, b)
    frame_dig -2
    frame_dig -1
    shl
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:191
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_shr(a: uint64, b: uint64) -> uint64:
verify_shr:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:194-195
    // @arc4.abimethod()
    // public verify_shr(a: uint64, b: uint64): uint64 {
    proto 2 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:196
    // const result = op.shr(a, b)
    frame_dig -2
    frame_dig -1
    shr
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:197
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_sqrt(a: uint64) -> uint64:
verify_sqrt:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:200-201
    // @arc4.abimethod()
    // public verify_sqrt(a: uint64): uint64 {
    proto 1 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:202
    // const result = op.sqrt(a)
    frame_dig -1
    sqrt
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:203
    // return result
    retsub


// tests/artifacts/miscellaneous-ops/contract.algo.ts::MiscellaneousOpsContract.verify_substring(a: bytes, b: uint64, c: uint64) -> bytes:
verify_substring:
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:206-207
    // @arc4.abimethod()
    // public verify_substring(a: bytes, b: uint64, c: uint64): bytes {
    proto 3 1
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:208
    // const result = op.substring(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    substring3
    // tests/artifacts/miscellaneous-ops/contract.algo.ts:209
    // return result
    retsub
