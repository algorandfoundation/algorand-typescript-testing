{
    "name": "PrimitiveOpsContract",
    "structs": {},
    "methods": [
        {
            "name": "verify_uint64_init",
            "args": [
                {
                    "type": "byte[]",
                    "name": "raw_value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_add",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_sub",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_mul",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_div",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_mod",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_and",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_or",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_xor",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_not",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_lshift",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_rshift",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_pow",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_eq",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_ne",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_lt",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_le",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_gt",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uint64_ge",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bytes_init",
            "args": [
                {
                    "type": "uint64",
                    "name": "raw_value"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bytes_add",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "pad_a_size"
                },
                {
                    "type": "uint64",
                    "name": "pad_b_size"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bytes_eq",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bytes_ne",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bytes_and",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bytes_or",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bytes_xor",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bytes_not",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "pad_size"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_add",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_add_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_sub",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_sub_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_mul",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_mul_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_div",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_div_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_mod",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_mod_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_and",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_and_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_or",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_or_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_xor",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_xor_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_eq",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_eq_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_ne",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_ne_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_lt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_lt_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_le",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_le_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_gt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_gt_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_ge",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguint_ge_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_log",
            "args": [
                {
                    "type": "string",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                },
                {
                    "type": "byte[]",
                    "name": "c"
                },
                {
                    "type": "byte[]",
                    "name": "d"
                },
                {
                    "type": "bool",
                    "name": "e"
                },
                {
                    "type": "string",
                    "name": "f"
                },
                {
                    "type": "uint64",
                    "name": "g"
                },
                {
                    "type": "uint256",
                    "name": "h"
                },
                {
                    "type": "ufixed32x8",
                    "name": "i"
                },
                {
                    "type": "ufixed256x16",
                    "name": "j"
                },
                {
                    "type": "byte[]",
                    "name": "k"
                },
                {
                    "type": "byte[]",
                    "name": "m"
                },
                {
                    "type": "byte[]",
                    "name": "n"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        423,
                        493,
                        524,
                        557,
                        588,
                        621,
                        652,
                        685,
                        716,
                        749,
                        780,
                        813,
                        844,
                        877,
                        911,
                        947,
                        981,
                        1017,
                        1051,
                        1087,
                        1121,
                        1157,
                        1191,
                        1227,
                        1261,
                        1297,
                        1331,
                        1367,
                        1401,
                        1437,
                        1471,
                        1507,
                        1543,
                        1579,
                        1612,
                        1645,
                        1689,
                        1717,
                        1746,
                        1775,
                        1804,
                        1833,
                        1862,
                        1891,
                        1916,
                        1941,
                        1966,
                        1987,
                        2012,
                        2037,
                        2062,
                        2087,
                        2112,
                        2137,
                        2162,
                        2187
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        2215
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        426,
                        496,
                        527,
                        560,
                        591,
                        624,
                        655,
                        688,
                        719,
                        752,
                        783,
                        816,
                        847,
                        880,
                        914,
                        950,
                        984,
                        1020,
                        1054,
                        1090,
                        1124,
                        1160,
                        1194,
                        1230,
                        1264,
                        1300,
                        1334,
                        1370,
                        1404,
                        1440,
                        1474,
                        1510,
                        1546,
                        1582,
                        1615,
                        1648,
                        1692,
                        1720,
                        1749,
                        1778,
                        1807,
                        1836,
                        1865,
                        1894,
                        1919,
                        1944,
                        1969,
                        1990,
                        2015,
                        2040,
                        2065,
                        2090,
                        2115,
                        2140,
                        2165,
                        2190
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAQAmAgQVH3x1AQAxG0EIjII4BHJcaSsEFzFFWQRT80iTBIjIsmkEpGS3qwScixG4BG9AZU4E7JopdATHk3CPBH3bdJkEohxEPQRuf7ISBLAH/LAELrwg1ASwlUtmBN0UCu8ErOR02gS6aUmQBG21gcAEkcjbiQTb53FYBJoPIuEEZAM9NwQqcjfFBOOpRFgEQvh/fQQrVUKkBJvi++kEHNklFQRk4XBcBPEnHFAEKrY7cASDS7fSBFMWINcEP7nnaQT6jbC8BKcupIUEt7C6GQR0RgxCBKsyBzgEUq1GVAQQFWOZBA8HWVcEvYQ9/wSzd9OBBIl2cmUERWtLIwQz0biMBGv5c+oEZ81rsgQ/WIBaBB4TADkEUJ3JHQSlZKICBCNlB2ME4AfBCzYaAI44BuYGzQa0BpsGggZpBlAGNwYeBgkF8AXXBb4FoQWEBWcFSgUtBRAE9ATIBKcEhgRiBD4EGgP4A9QDsgOOA2wDSAMmAwIC4AK8ApoCdgJUAjACDgHqAcgBpwGIAWcBSAEnAQgA5wDIAKcAiABnAEgAAiNDMRkURDEYRDYaAVcCADYaAhc2GgNXAgA2GgRXAgA2GgU2GgY2Ggc2Ggg2Ggk2Ggo2GgtXAgA2GgxXAgA2Gg1XAgCICMgiQzEZFEQxGEQ2GgFXAgA2GgIXiAioKSNPAlQoTFCwIkMxGRREMRhENhoBVwIANhoCVwIAiAh+KSNPAlQoTFCwIkMxGRREMRhENhoBVwIANhoCF4gIVSkjTwJUKExQsCJDMRkURDEYRDYaAVcCADYaAlcCAIgIKykjTwJUKExQsCJDMRkURDEYRDYaAVcCADYaAheICAIpI08CVChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgCIB9gpI08CVChMULAiQzEZFEQxGEQ2GgFXAgA2GgIXiAevKSNPAlQoTFCwIkMxGRREMRhENhoBVwIANhoCVwIAiAeFKSNPAlQoTFCwIkMxGRREMRhENhoBVwIANhoCF4gHXCkjTwJUKExQsCJDMRkURDEYRDYaAVcCADYaAlcCAIgHMikjTwJUKExQsCJDMRkURDEYRDYaAVcCADYaAheIBwkpI08CVChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgCIBt8pI08CVChMULAiQzEZFEQxGEQ2GgFXAgA2GgIXiAa2SRUWVwYCTFAoTFCwIkMxGRREMRhENhoBVwIANhoCVwIAiAaJSRUWVwYCTFAoTFCwIkMxGRREMRhENhoBVwIANhoCF4gGXUkVFlcGAkxQKExQsCJDMRkURDEYRDYaAVcCADYaAlcCAIgGMEkVFlcGAkxQKExQsCJDMRkURDEYRDYaAVcCADYaAheIBgRJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgCIBddJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgA2GgIXiAWqSRUWVwYCTFAoTFCwIkMxGRREMRhENhoBVwIANhoCVwIAiAV9SRUWVwYCTFAoTFCwIkMxGRREMRhENhoBVwIANhoCF4gFUEkVFlcGAkxQKExQsCJDMRkURDEYRDYaAVcCADYaAlcCAIgFI0kVFlcGAkxQKExQsCJDMRkURDEYRDYaAVcCADYaAheIBPdJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgCIBMpJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgA2GgIXiASdSRUWVwYCTFAoTFCwIkMxGRREMRhENhoBVwIANhoCVwIAiARwSRUWVwYCTFAoTFCwIkMxGRREMRhENhoBVwIANhoCF4gEREkVFlcGAkxQKExQsCJDMRkURDEYRDYaAVcCADYaAlcCAIgEF0kVFlcGAkxQKExQsCJDMRkURDEYRDYaAVcCADYaAheIA+lJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgCIA7xJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgCIA49JFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgCIA2JJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgCIAzUpI08CVChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgCIAwspI08CVChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgA2GgMXNhoEF4gC0EkVFlcGAkxQKExQsCJDMRkURDEYRDYaAReIAq1JFRZXBgJMUChMULAiQzEZFEQxGEQ2GgEXNhoCF4gChCkjTwJUKExQsCJDMRkURDEYRDYaARc2GgIXiAJeKSNPAlQoTFCwIkMxGRREMRhENhoBFzYaAheIAjgpI08CVChMULAiQzEZFEQxGEQ2GgEXNhoCF4gCEikjTwJUKExQsCJDMRkURDEYRDYaARc2GgIXiAHsKSNPAlQoTFCwIkMxGRREMRhENhoBFzYaAheIAcYpI08CVChMULAiQzEZFEQxGEQ2GgEXNhoCF4gBoBYoTFCwIkMxGRREMRhENhoBFzYaAheIAX4WKExQsCJDMRkURDEYRDYaARc2GgIXiAFcFihMULAiQzEZFEQxGEQ2GgEXiAFAFihMULAiQzEZFEQxGEQ2GgEXNhoCF4gBHhYoTFCwIkMxGRREMRhENhoBFzYaAheIAPwWKExQsCJDMRkURDEYRDYaARc2GgIXiADaFihMULAiQzEZFEQxGEQ2GgEXNhoCF4gAuBYoTFCwIkMxGRREMRhENhoBFzYaAheIAJYWKExQsCJDMRkURDEYRDYaARc2GgIXiAB0FihMULAiQzEZFEQxGEQ2GgEXNhoCF4gAUhYoTFCwIkMxGRREMRhENhoBFzYaAheIADAWKExQsCJDMRkURDEYRDYaAVcCAIgAEhYoTFCwIkMxGUD4/jEYFEQiQ4oBAYv/F4mKAgGL/ov/CImKAgGL/ov/CYmKAgGL/ov/C4mKAgGL/ov/ComKAgGL/ov/GImKAgGL/ov/GomKAgGL/ov/GYmKAgGL/ov/G4mKAQGL/xyJigIBi/6L/5CJigIBi/6L/5GJigIBi/6L/5SJigIBi/6L/xKJigIBi/6L/xOJigIBi/6L/wyJigIBi/6L/w6JigIBi/6L/w2JigIBi/6L/w+JigEBi/8WiYoEAYv+r4v8UIv/r4v9UFABiYoCAYv+i/8SiYoCAYv+i/8TiYoCAYv+i/+siYoCAYv+i/+riYoCAYv+i/+tiYoCAYv/r4v+UK4BiYoCAYv+i/+giYoCAYv/Fov+oImKAgGL/ov/oYmKAgGL/xaL/kyhiYoCAYv+i/+jiYoCAYv/Fov+o4mKAgGL/ov/oomKAgGL/xaL/kyiiYoCAYv+i/+qiYoCAYv/Fov+TKqJigIBi/6L/6yJigIBi/8Wi/6siYoCAYv+i/+riYoCAYv/Fov+q4mKAgGL/ov/rYmKAgGL/xaL/q2JigIBi/6L/6iJigIBi/8Wi/6oiYoCAYv+i/+piYoCAYv/Fov+qYmKAgGL/ov/pImKAgGL/xaL/qWJigIBi/6L/6aJigIBi/8Wi/6niYoCAYv+i/+liYoCAYv/Fov+pImKAgGL/ov/p4mKAgGL/xaL/qaJig0Ai/QWi/NMUIv1UIv2UIv3UIv4UIv5UIv6UIv7UIv8UIv9UIv+UIv/ULCJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 2,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}