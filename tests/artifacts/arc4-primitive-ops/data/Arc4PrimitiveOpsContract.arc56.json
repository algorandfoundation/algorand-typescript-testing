{
    "name": "Arc4PrimitiveOpsContract",
    "structs": {},
    "methods": [
        {
            "name": "verify_uintn_uintn_eq",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_uintn_eq",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_biguintn_eq",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_biguintn_eq",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_byte_byte_eq",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_uintn_ne",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_uintn_ne",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_biguintn_ne",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_biguintn_ne",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_byte_byte_ne",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_uintn_lt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_uintn_lt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_biguintn_lt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_biguintn_lt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_byte_byte_lt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_uintn_le",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_uintn_le",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_biguintn_le",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_biguintn_le",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_byte_byte_le",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_uintn_gt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_uintn_gt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_biguintn_gt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_biguintn_gt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_byte_byte_gt",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_uintn_ge",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_uintn_ge",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_biguintn_ge",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_biguintn_ge",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_byte_byte_ge",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_init",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint32"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_init",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint256"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_byte_init",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_from_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint32"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_from_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint256"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_byte_from_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_uintn_from_log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint32"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_biguintn_from_log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint256"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_byte_from_log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_ufixednxm_bytes",
            "args": [
                {
                    "type": "ufixed32x8",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bigufixednxm_bytes",
            "args": [
                {
                    "type": "ufixed256x16",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_ufixednxm_from_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "ufixed32x8"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bigufixednxm_from_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "ufixed256x16"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_ufixednxm_from_log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "ufixed32x8"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bigufixednxm_from_log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "ufixed256x16"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_string_init",
            "args": [
                {
                    "type": "string",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_string_add",
            "args": [
                {
                    "type": "string",
                    "name": "a"
                },
                {
                    "type": "string",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_string_eq",
            "args": [
                {
                    "type": "string",
                    "name": "a"
                },
                {
                    "type": "string",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_string_bytes",
            "args": [
                {
                    "type": "string",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_string_from_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_string_from_log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bool_bytes",
            "args": [
                {
                    "type": "bool",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bool_from_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_bool_from_log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_emit",
            "args": [
                {
                    "type": "string",
                    "name": "a"
                },
                {
                    "type": "uint512",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "c"
                },
                {
                    "type": "byte[]",
                    "name": "d"
                },
                {
                    "type": "uint64",
                    "name": "e"
                },
                {
                    "type": "bool",
                    "name": "f"
                },
                {
                    "type": "byte[]",
                    "name": "g"
                },
                {
                    "type": "string",
                    "name": "h"
                },
                {
                    "type": "uint64",
                    "name": "m"
                },
                {
                    "type": "uint256",
                    "name": "n"
                },
                {
                    "type": "ufixed32x8",
                    "name": "o"
                },
                {
                    "type": "ufixed256x16",
                    "name": "p"
                },
                {
                    "type": "bool",
                    "name": "q"
                },
                {
                    "type": "byte[]",
                    "name": "r"
                },
                {
                    "type": "byte[]",
                    "name": "s"
                },
                {
                    "type": "byte[]",
                    "name": "t"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "SwappedArc4",
                    "args": [
                        {
                            "type": "uint64",
                            "name": "m"
                        },
                        {
                            "type": "uint256",
                            "name": "n"
                        },
                        {
                            "type": "ufixed32x8",
                            "name": "o"
                        },
                        {
                            "type": "ufixed256x16",
                            "name": "p"
                        },
                        {
                            "type": "bool",
                            "name": "q"
                        },
                        {
                            "type": "uint8[3]",
                            "name": "r"
                        },
                        {
                            "type": "uint16[]",
                            "name": "s"
                        },
                        {
                            "type": "(uint32,uint64,string)",
                            "name": "t"
                        }
                    ]
                },
                {
                    "name": "Swapped",
                    "args": [
                        {
                            "type": "string",
                            "name": "0"
                        },
                        {
                            "type": "uint512",
                            "name": "1"
                        },
                        {
                            "type": "uint64",
                            "name": "2"
                        },
                        {
                            "type": "byte[]",
                            "name": "3"
                        },
                        {
                            "type": "uint64",
                            "name": "4"
                        },
                        {
                            "type": "bool",
                            "name": "5"
                        },
                        {
                            "type": "byte[]",
                            "name": "6"
                        },
                        {
                            "type": "string",
                            "name": "7"
                        },
                        {
                            "type": "uint64",
                            "name": "8"
                        },
                        {
                            "type": "uint256",
                            "name": "9"
                        },
                        {
                            "type": "ufixed32x8",
                            "name": "10"
                        },
                        {
                            "type": "ufixed256x16",
                            "name": "11"
                        },
                        {
                            "type": "bool",
                            "name": "12"
                        },
                        {
                            "type": "uint8[3]",
                            "name": "13"
                        },
                        {
                            "type": "uint16[]",
                            "name": "14"
                        },
                        {
                            "type": "(uint32,uint64,string)",
                            "name": "15"
                        }
                    ]
                },
                {
                    "name": "",
                    "args": [
                        {
                            "type": "string",
                            "name": "0"
                        },
                        {
                            "type": "uint512",
                            "name": "1"
                        },
                        {
                            "type": "uint64",
                            "name": "2"
                        },
                        {
                            "type": "byte[]",
                            "name": "3"
                        },
                        {
                            "type": "uint64",
                            "name": "4"
                        },
                        {
                            "type": "bool",
                            "name": "5"
                        },
                        {
                            "type": "byte[]",
                            "name": "6"
                        },
                        {
                            "type": "string",
                            "name": "7"
                        },
                        {
                            "type": "uint64",
                            "name": "8"
                        },
                        {
                            "type": "uint256",
                            "name": "9"
                        },
                        {
                            "type": "ufixed32x8",
                            "name": "10"
                        },
                        {
                            "type": "ufixed256x16",
                            "name": "11"
                        },
                        {
                            "type": "bool",
                            "name": "12"
                        },
                        {
                            "type": "uint8[3]",
                            "name": "13"
                        },
                        {
                            "type": "uint16[]",
                            "name": "14"
                        },
                        {
                            "type": "(uint32,uint64,string)",
                            "name": "15"
                        }
                    ]
                }
            ],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        2992,
                        3009,
                        3026,
                        3043,
                        3060,
                        3147,
                        3164
                    ],
                    "errorMessage": "Bytes has valid prefix"
                },
                {
                    "pc": [
                        418,
                        504,
                        526,
                        545,
                        569,
                        591,
                        610,
                        640,
                        667,
                        689,
                        711,
                        733,
                        755,
                        774,
                        793,
                        817,
                        841,
                        863,
                        885,
                        907,
                        926,
                        945,
                        964,
                        986,
                        1008,
                        1030,
                        1063,
                        1096,
                        1129,
                        1162,
                        1195,
                        1228,
                        1261,
                        1294,
                        1327,
                        1360,
                        1393,
                        1426,
                        1459,
                        1492,
                        1525,
                        1558,
                        1591,
                        1624,
                        1657,
                        1690,
                        1723,
                        1756,
                        1789,
                        1822,
                        1855,
                        1888,
                        1921,
                        1954,
                        1987
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        2025
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        421,
                        507,
                        529,
                        548,
                        572,
                        594,
                        613,
                        643,
                        670,
                        692,
                        714,
                        736,
                        758,
                        777,
                        796,
                        820,
                        844,
                        866,
                        888,
                        910,
                        929,
                        948,
                        967,
                        989,
                        1011,
                        1033,
                        1066,
                        1099,
                        1132,
                        1165,
                        1198,
                        1231,
                        1264,
                        1297,
                        1330,
                        1363,
                        1396,
                        1429,
                        1462,
                        1495,
                        1528,
                        1561,
                        1594,
                        1627,
                        1660,
                        1693,
                        1726,
                        1759,
                        1792,
                        1825,
                        1858,
                        1891,
                        1924,
                        1957,
                        1990
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        2036,
                        2049,
                        2065,
                        2076,
                        2092,
                        2103,
                        2119,
                        2132,
                        2148,
                        2161,
                        2177,
                        2190,
                        2206,
                        2217,
                        2234,
                        2245,
                        2262,
                        2275,
                        2291,
                        2304,
                        2320,
                        2333,
                        2353,
                        2364,
                        2382,
                        2393,
                        2412,
                        2425,
                        2441,
                        2454,
                        2474,
                        2487,
                        2507,
                        2518,
                        2536,
                        2547,
                        2566,
                        2579,
                        2595,
                        2608,
                        2628,
                        2641,
                        2661,
                        2672,
                        2690,
                        2701,
                        2720,
                        2733,
                        2749,
                        2762,
                        2782,
                        2795,
                        2815,
                        2826,
                        2844,
                        2855,
                        2874,
                        2887,
                        2903,
                        2916,
                        2937,
                        2954,
                        2970
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "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",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [
        {
            "name": "SwappedArc4",
            "args": [
                {
                    "type": "uint64",
                    "name": "m"
                },
                {
                    "type": "uint256",
                    "name": "n"
                },
                {
                    "type": "ufixed32x8",
                    "name": "o"
                },
                {
                    "type": "ufixed256x16",
                    "name": "p"
                },
                {
                    "type": "bool",
                    "name": "q"
                },
                {
                    "type": "uint8[3]",
                    "name": "r"
                },
                {
                    "type": "uint16[]",
                    "name": "s"
                },
                {
                    "type": "(uint32,uint64,string)",
                    "name": "t"
                }
            ]
        },
        {
            "name": "Swapped",
            "args": [
                {
                    "type": "string",
                    "name": "0"
                },
                {
                    "type": "uint512",
                    "name": "1"
                },
                {
                    "type": "uint64",
                    "name": "2"
                },
                {
                    "type": "byte[]",
                    "name": "3"
                },
                {
                    "type": "uint64",
                    "name": "4"
                },
                {
                    "type": "bool",
                    "name": "5"
                },
                {
                    "type": "byte[]",
                    "name": "6"
                },
                {
                    "type": "string",
                    "name": "7"
                },
                {
                    "type": "uint64",
                    "name": "8"
                },
                {
                    "type": "uint256",
                    "name": "9"
                },
                {
                    "type": "ufixed32x8",
                    "name": "10"
                },
                {
                    "type": "ufixed256x16",
                    "name": "11"
                },
                {
                    "type": "bool",
                    "name": "12"
                },
                {
                    "type": "uint8[3]",
                    "name": "13"
                },
                {
                    "type": "uint16[]",
                    "name": "14"
                },
                {
                    "type": "(uint32,uint64,string)",
                    "name": "15"
                }
            ]
        },
        {
            "name": "",
            "args": [
                {
                    "type": "string",
                    "name": "0"
                },
                {
                    "type": "uint512",
                    "name": "1"
                },
                {
                    "type": "uint64",
                    "name": "2"
                },
                {
                    "type": "byte[]",
                    "name": "3"
                },
                {
                    "type": "uint64",
                    "name": "4"
                },
                {
                    "type": "bool",
                    "name": "5"
                },
                {
                    "type": "byte[]",
                    "name": "6"
                },
                {
                    "type": "string",
                    "name": "7"
                },
                {
                    "type": "uint64",
                    "name": "8"
                },
                {
                    "type": "uint256",
                    "name": "9"
                },
                {
                    "type": "ufixed32x8",
                    "name": "10"
                },
                {
                    "type": "ufixed256x16",
                    "name": "11"
                },
                {
                    "type": "bool",
                    "name": "12"
                },
                {
                    "type": "uint8[3]",
                    "name": "13"
                },
                {
                    "type": "uint16[]",
                    "name": "14"
                },
                {
                    "type": "(uint32,uint64,string)",
                    "name": "15"
                }
            ]
        }
    ],
    "templateVariables": {}
}